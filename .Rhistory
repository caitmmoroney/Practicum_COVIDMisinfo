regQuad_robustSE[4], # D robust se
reg_quad$coefficients[5], # 2007.year
regQuad_coef_pvals[5], # 2007.year p-value
regQuad_robustSE[5], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_quad$r.squared), # R-squared
Cubic = c(reg_cube$coefficients[1], # intercept estimate
regCube_coef_pvals[1], # intercept p-value
regCube_robustSE[1], # intercept robust se
reg_cube$coefficients[2], # index estimate
regCube_coef_pvals[2], # index p-value
regCube_robustSE[2], # index robust se
reg_cube$coefficients[3], # index sq estimate
regCube_coef_pvals[3], # index sq p-value
regCube_robustSE[3], # index sq robust se
reg_cube$coefficients[4], # index cube estimate
regCube_coef_pvals[4], # index cube p-value
regCube_robustSE[4], # index cube robust se
reg_cube$coefficients[5], # D estimate
regCube_coef_pvals[5], # D p-value
regCube_robustSE[5], # D robust se
reg_cube$coefficients[6], # 2007.year estimate
regCube_coef_pvals[6], # 2007.year p-value
regCube_robustSE[6], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_cube$r.squared), # R-squared
Piecewise = c(reg_piece$coefficients[1], # intercept estimate
regPiece_coef_pvals[1], # intercept p-value
regPiece_robustSE[1], # intercept robust se
"", # index estimate
"", # index p-value
"", # index robust se
"", # index sq estimate
"", # index sq p-value
"", # index sq robust se
"", # index cube estimate
"", # index cube p-value
"", # index cube robust se
reg_piece$coefficients[2], # D estimate
regPiece_coef_pvals[2], # D p-value
regPiece_robustSE[2], # D robust se
reg_piece$coefficients[5], # 2007.year
regPiece_coef_pvals[5], # 2007.year p-value
regPiece_robustSE[5], # 2007.year robust se
reg_piece$coefficients[3], # index rel estimate
regPiece_coef_pvals[3], # index rel p-value
regPiece_robustSE[3], # index rel robust se
reg_piece$coefficients[4], # D rel estimate
regPiece_coef_pvals[4], # D rel p-value
regPiece_robustSE[4], # D rel robust se
nrow(rdd), # num observations
sum_piece$r.squared) # R-squared
) %>%
format(scientific = FALSE, digits = 4, drop0trailing = TRUE)
rdd %>%
mutate(index_rel = index - 2900,
D_rel = D*index_rel) ->
rdd
reg_piece <- lm(matriculated ~ D + index_rel + D_rel + as.factor(year), data = rdd)
# get values for table
# get summary of regression
sum_quad <- summary(reg_quad)
sum_cube <- summary(reg_cube)
sum_piece <- summary(reg_piece)
# extract coefficient p-values
regQuad_coef_pvals <- sum_quad[["coefficients"]][,4]
regCube_coef_pvals <- sum_cube[["coefficients"]][,4]
regPiece_coef_pvals <- sum_piece[["coefficients"]][,4]
# obtain robust SE for coefficients
regQuad_robustSE <- coeftest(reg_quad, vcov = vcovHC(reg_quad, "HC1"))[,2]
regCube_robustSE <- coeftest(reg_cube, vcov = vcovHC(reg_cube, "HC1"))[,2]
regPiece_robustSE <- coeftest(reg_piece, vcov = vcovHC(reg_piece, "HC1"))[,2]
# create table of results
data.frame(Variables = c("Intercept-estimate",
"Intercept-p value",
"Intercept-robust se",
"index-estimate",
"index-p value",
"index-robust se",
"index_sq-estimate",
"index_sq-p value",
"index_sq-robust se",
"index_cube-estimate",
"index_cube-p value",
"index_cube-robust se",
"D-estimate",
"D-p value",
"D-robust se",
"2007.year-estimate",
"2007.year-p value",
"2007.year-robust se",
"index_rel-estimate",
"index_rel-p value",
"index_rel-robust se",
"D_rel-estimate",
"D_rel-p value",
"D_rel-robust se",
"Observations",
"R-squared"),
`Base Linear` = c(reg_base$coefficients[1], # intercept estimate
base_coef_pvals[1], # intercept p-value
base_robustSE[1], # intercept robust se
reg_base$coefficients[2], # index estimate
base_coef_pvals[2], # index p-value
base_robustSE[2], # index robust se
"", # index sq estimate
"", # index sq p-value
"", # index sq robust se
"", # index cube estimate
"", # index cube p-value
"", # index cube robust se
reg_base$coefficients[3], # D estimate
base_coef_pvals[3], # D p-value
base_robustSE[3], # D robust se,
reg_base$coefficients[4], # 2007.year
base_coef_pvals[4], # 2007.year p-value
base_robustSE[4], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_base$r.squared), # R-squared
Quadratic = c(reg_quad$coefficients[1], # intercept estimate
regQuad_coef_pvals[1], # intercept p-value
regQuad_robustSE[1], # intercept robust se
reg_quad$coefficients[2], # index estimate
regQuad_coef_pvals[2], # index p-value
regQuad_robustSE[2], # index robust se
reg_quad$coefficients[3], # index sq estimate
regQuad_coef_pvals[3], # index sq p-value
regQuad_robustSE[3], # index sq robust se
"", # index cube estimate
"", # index cube p-value
"", # index cube robust se
reg_quad$coefficients[4], # D estimate
regQuad_coef_pvals[4], # D p-value
regQuad_robustSE[4], # D robust se
reg_quad$coefficients[5], # 2007.year
regQuad_coef_pvals[5], # 2007.year p-value
regQuad_robustSE[5], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_quad$r.squared), # R-squared
Cubic = c(reg_cube$coefficients[1], # intercept estimate
regCube_coef_pvals[1], # intercept p-value
regCube_robustSE[1], # intercept robust se
reg_cube$coefficients[2], # index estimate
regCube_coef_pvals[2], # index p-value
regCube_robustSE[2], # index robust se
reg_cube$coefficients[3], # index sq estimate
regCube_coef_pvals[3], # index sq p-value
regCube_robustSE[3], # index sq robust se
reg_cube$coefficients[4], # index cube estimate
regCube_coef_pvals[4], # index cube p-value
regCube_robustSE[4], # index cube robust se
reg_cube$coefficients[5], # D estimate
regCube_coef_pvals[5], # D p-value
regCube_robustSE[5], # D robust se
reg_cube$coefficients[6], # 2007.year estimate
regCube_coef_pvals[6], # 2007.year p-value
regCube_robustSE[6], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_cube$r.squared), # R-squared
Piecewise = c(reg_piece$coefficients[1], # intercept estimate
regPiece_coef_pvals[1], # intercept p-value
regPiece_robustSE[1], # intercept robust se
"", # index estimate
"", # index p-value
"", # index robust se
"", # index sq estimate
"", # index sq p-value
"", # index sq robust se
"", # index cube estimate
"", # index cube p-value
"", # index cube robust se
reg_piece$coefficients[2], # D estimate
regPiece_coef_pvals[2], # D p-value
regPiece_robustSE[2], # D robust se
reg_piece$coefficients[5], # 2007.year
regPiece_coef_pvals[5], # 2007.year p-value
regPiece_robustSE[5], # 2007.year robust se
reg_piece$coefficients[3], # index rel estimate
regPiece_coef_pvals[3], # index rel p-value
regPiece_robustSE[3], # index rel robust se
reg_piece$coefficients[4], # D rel estimate
regPiece_coef_pvals[4], # D rel p-value
regPiece_robustSE[4], # D rel robust se
nrow(rdd), # num observations
sum_piece$r.squared) # R-squared
) ->
dat
dat %>%
format(scientific = FALSE, digits = 4, drop0trailing = TRUE)
help(mutate_at)
dat %>% mutate_at(.-Variables, ~round(., 3))
dat %>% mutate_at(-c("Variables"), ~round(., 3))
dat %>% mutate_at(-c("Base.Linear", "Quadratic", "Cubic", "Piecewise"), ~round(., 3))
dat %>% mutate_at(c("Base.Linear", "Quadratic", "Cubic", "Piecewise"), ~round(., 3))
typeof(dat$Base.Linear)
dat %>% mutate_at(c("Base.Linear", "Quadratic", "Cubic", "Piecewise"), ~as.numeric(.)) %>% format(digits = 4, drop0trailing = TRUE)
dat %>% mutate_at(c("Base.Linear", "Quadratic", "Cubic", "Piecewise"), ~as.numeric(.)) %>% format(digits = 4, drop0trailing = TRUE, scientific = FALSE)
dat %>% mutate_at(c("Base.Linear", "Quadratic", "Cubic", "Piecewise"), ~as.numeric(.)) %>% mutate_at(c("Base.Linear","Quadratic","Cubic","Piecewise"), ~round(., 4)) %>% format(digits = 4, drop0trailing = TRUE, scientific = FALSE)
# subset original data according to different bandwidths
data_75 <- rdd[which(rdd$index >= 2825 & rdd$index < 2975),]
data_50 <- rdd[which(rdd$index >= 2850 & rdd$index < 2950),]
data_25 <- rdd[which(rdd$index >= 2875 & rdd$index < 2925),]
# regress same model for each set of the data
reg_base <- reg_model
reg_75 <- lm(matriculated ~ index + D + as.factor(year), data = data_75)
reg_50 <- lm(matriculated ~ index + D + as.factor(year), data = data_50)
reg_25 <- lm(matriculated ~ index + D + as.factor(year), data = data_25)
# get summary of regression
sum_base <- summary(reg_base)
sum_75 <- summary(reg_75)
sum_50 <- summary(reg_50)
sum_25 <- summary(reg_25)
# extract coefficient p-values
base_coef_pvals <- sum_base[["coefficients"]][,4]
reg75_coef_pvals <- sum_75[["coefficients"]][,4]
reg50_coef_pvals <- sum_50[["coefficients"]][,4]
reg25_coef_pvals <- sum_25[["coefficients"]][,4]
# obtain robust SE for coefficients
base_robustSE <- coeftest(reg_base, vcov = vcovHC(reg_base, "HC1"))[,2]
reg75_robustSE <- coeftest(reg_75, vcov = vcovHC(reg_75, "HC1"))[,2]
reg50_robustSE <- coeftest(reg_50, vcov = vcovHC(reg_50, "HC1"))[,2]
reg25_robustSE <- coeftest(reg_25, vcov = vcovHC(reg_25, "HC1"))[,2]
# create table of results
data.frame(Variables = c("Intercept-estimate",
"Intercept-p value",
"Intercept-robust se",
"index-estimate",
"index-p value",
"index-robust se",
"D-estimate",
"D-p value",
"D-robust se",
"2007.year-estimate",
"2007.year-p value",
"2007.year-robust se",
"Observations",
"R-squared"),
reg_base = c(reg_base$coefficients[1], # intercept estimate
base_coef_pvals[1], # intercept p-value
base_robustSE[1], # intercept robust se
reg_base$coefficients[2], # index estimate
base_coef_pvals[2], # index p-value
base_robustSE[2], # index robust se
reg_base$coefficients[3], # D estimate
base_coef_pvals[3], # D p-value
base_robustSE[3], # D robust se
reg_base$coefficients[4], # 2007.year
base_coef_pvals[4], # 2007.year p-value
base_robustSE[4], # 2007.year robust se
nrow(rdd), # num observations
sum_base$r.squared), # R-squared
reg_75 = c(reg_75$coefficients[1], # intercept estimate
reg75_coef_pvals[1], # intercept p-value
reg75_robustSE[1], # intercept robust se
reg_75$coefficients[2], # index estimate
reg75_coef_pvals[2], # index p-value
reg75_robustSE[2], # index robust se
reg_75$coefficients[3], # D estimate
reg75_coef_pvals[3], # D p-value
reg75_robustSE[3], # D robust se
reg_75$coefficients[4], # 2007.year
reg75_coef_pvals[4], # 2007.year p-value
reg75_robustSE[4], # 2007.year robust se
nrow(data_75), # num observations
sum_75$r.squared), # R-squared
reg_50 = c(reg_50$coefficients[1], # intercept estimate
reg50_coef_pvals[1], # intercept p-value
reg50_robustSE[1], # intercept robust se
reg_50$coefficients[2], # index estimate
reg50_coef_pvals[2], # index p-value
reg50_robustSE[2], # index robust se
reg_50$coefficients[3], # D estimate
reg50_coef_pvals[3], # D p-value
reg50_robustSE[3], # D robust se
reg_50$coefficients[4], # 2007.year
reg50_coef_pvals[4], # 2007.year p-value
reg50_robustSE[4], # 2007.year robust se
nrow(data_50), # num observations
sum_50$r.squared), # R-squared
reg_25 = c(reg_25$coefficients[1], # intercept estimate
reg25_coef_pvals[1], # intercept p-value
reg25_robustSE[1], # intercept robust se
reg_25$coefficients[2], # index estimate
reg25_coef_pvals[2], # index p-value
reg25_robustSE[2], # index robust se
reg_25$coefficients[3], # D estimate
reg25_coef_pvals[3], # D p-value
reg25_robustSE[3], # D robust se
reg_25$coefficients[4], # 2007.year
reg25_coef_pvals[4], # 2007.year p-value
reg25_robustSE[4], # 2007.year robust se
nrow(data_25), # num observations
sum_25$r.squared) # R-squared
) ->
dat
dat %>%
mutate_at(c("reg_base", "reg_75", "reg_50", "reg_25"), ~as.numeric(.)) %>%
mutate_at(c("reg_base", "reg_75", "reg_50", "reg_25"), ~round(., 4)) %>%
format(digits = 4, drop0trailing = TRUE, scientific = FALSE)
rdd %>%
mutate(index_rel = index - 2900,
D_rel = D*index_rel) ->
rdd
reg_piece <- lm(matriculated ~ D + index_rel + D_rel + as.factor(year), data = rdd)
# get values for table
# get summary of regression
sum_quad <- summary(reg_quad)
sum_cube <- summary(reg_cube)
sum_piece <- summary(reg_piece)
# extract coefficient p-values
regQuad_coef_pvals <- sum_quad[["coefficients"]][,4]
regCube_coef_pvals <- sum_cube[["coefficients"]][,4]
regPiece_coef_pvals <- sum_piece[["coefficients"]][,4]
# obtain robust SE for coefficients
regQuad_robustSE <- coeftest(reg_quad, vcov = vcovHC(reg_quad, "HC1"))[,2]
regCube_robustSE <- coeftest(reg_cube, vcov = vcovHC(reg_cube, "HC1"))[,2]
regPiece_robustSE <- coeftest(reg_piece, vcov = vcovHC(reg_piece, "HC1"))[,2]
# create table of results
data.frame(Variables = c("Intercept-estimate",
"Intercept-p value",
"Intercept-robust se",
"index-estimate",
"index-p value",
"index-robust se",
"index_sq-estimate",
"index_sq-p value",
"index_sq-robust se",
"index_cube-estimate",
"index_cube-p value",
"index_cube-robust se",
"D-estimate",
"D-p value",
"D-robust se",
"2007.year-estimate",
"2007.year-p value",
"2007.year-robust se",
"index_rel-estimate",
"index_rel-p value",
"index_rel-robust se",
"D_rel-estimate",
"D_rel-p value",
"D_rel-robust se",
"Observations",
"R-squared"),
`Base Linear` = c(reg_base$coefficients[1], # intercept estimate
base_coef_pvals[1], # intercept p-value
base_robustSE[1], # intercept robust se
reg_base$coefficients[2], # index estimate
base_coef_pvals[2], # index p-value
base_robustSE[2], # index robust se
"", # index sq estimate
"", # index sq p-value
"", # index sq robust se
"", # index cube estimate
"", # index cube p-value
"", # index cube robust se
reg_base$coefficients[3], # D estimate
base_coef_pvals[3], # D p-value
base_robustSE[3], # D robust se,
reg_base$coefficients[4], # 2007.year
base_coef_pvals[4], # 2007.year p-value
base_robustSE[4], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_base$r.squared), # R-squared
Quadratic = c(reg_quad$coefficients[1], # intercept estimate
regQuad_coef_pvals[1], # intercept p-value
regQuad_robustSE[1], # intercept robust se
reg_quad$coefficients[2], # index estimate
regQuad_coef_pvals[2], # index p-value
regQuad_robustSE[2], # index robust se
reg_quad$coefficients[3], # index sq estimate
regQuad_coef_pvals[3], # index sq p-value
regQuad_robustSE[3], # index sq robust se
"", # index cube estimate
"", # index cube p-value
"", # index cube robust se
reg_quad$coefficients[4], # D estimate
regQuad_coef_pvals[4], # D p-value
regQuad_robustSE[4], # D robust se
reg_quad$coefficients[5], # 2007.year
regQuad_coef_pvals[5], # 2007.year p-value
regQuad_robustSE[5], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_quad$r.squared), # R-squared
Cubic = c(reg_cube$coefficients[1], # intercept estimate
regCube_coef_pvals[1], # intercept p-value
regCube_robustSE[1], # intercept robust se
reg_cube$coefficients[2], # index estimate
regCube_coef_pvals[2], # index p-value
regCube_robustSE[2], # index robust se
reg_cube$coefficients[3], # index sq estimate
regCube_coef_pvals[3], # index sq p-value
regCube_robustSE[3], # index sq robust se
reg_cube$coefficients[4], # index cube estimate
regCube_coef_pvals[4], # index cube p-value
regCube_robustSE[4], # index cube robust se
reg_cube$coefficients[5], # D estimate
regCube_coef_pvals[5], # D p-value
regCube_robustSE[5], # D robust se
reg_cube$coefficients[6], # 2007.year estimate
regCube_coef_pvals[6], # 2007.year p-value
regCube_robustSE[6], # 2007.year robust se
"", # index rel estimate
"", # index rel p-value
"", # index rel robust se
"", # D rel estimate
"", # D rel p-value
"", # D rel robust se
nrow(rdd), # num observations
sum_cube$r.squared), # R-squared
Piecewise = c(reg_piece$coefficients[1], # intercept estimate
regPiece_coef_pvals[1], # intercept p-value
regPiece_robustSE[1], # intercept robust se
"", # index estimate
"", # index p-value
"", # index robust se
"", # index sq estimate
"", # index sq p-value
"", # index sq robust se
"", # index cube estimate
"", # index cube p-value
"", # index cube robust se
reg_piece$coefficients[2], # D estimate
regPiece_coef_pvals[2], # D p-value
regPiece_robustSE[2], # D robust se
reg_piece$coefficients[5], # 2007.year
regPiece_coef_pvals[5], # 2007.year p-value
regPiece_robustSE[5], # 2007.year robust se
reg_piece$coefficients[3], # index rel estimate
regPiece_coef_pvals[3], # index rel p-value
regPiece_robustSE[3], # index rel robust se
reg_piece$coefficients[4], # D rel estimate
regPiece_coef_pvals[4], # D rel p-value
regPiece_robustSE[4], # D rel robust se
nrow(rdd), # num observations
sum_piece$r.squared) # R-squared
) ->
dat
dat %>%
mutate_at(c("Base.Linear", "Quadratic", "Cubic", "Piecewise"), ~as.numeric(.)) %>%
mutate_at(c("Base.Linear","Quadratic","Cubic","Piecewise"), ~round(., 4)) %>%
format(digits = 4, drop0trailing = TRUE, scientific = FALSE)
library(shiny); runApp('Documents/T. White Parker/Grade_Xing/Linked_Polygons_Example/click_polygons.R')
runApp('Documents/T. White Parker/Grade_Xing/Linked_Polygons_Example/click_polygons.R')
install.packages("leaflet")
runApp('Documents/T. White Parker/Grade_Xing/Linked_Polygons_Example/click_polygons.R')
library(tidyverse)
library(tidycensus)
library(sp)
install.packages("tidycensus")
library(tidycensus)
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
library(devtools)
install_github("r-spatial/sf", configure.args = "--with-proj-lib=/usr/local/lib/")
remotes::install_github("rstudio/rticles")
getwd()
setwd("./Documents/Grad_School_American/Classes/DATA_793")
getwd()
setwd("./Final_Products")
setwd("./Practicum_COVIDMisinfo")
pwd
getwd()
rticles::journals()
rmarkdown::draft("Moroney_FinalReport.Rmd", template = "arxiv", package = "rticles")
getwd()
git status
help(stackengine)
??stackengine
install.packages('bookdown')
